# core-image-minimal.inc

# Install required packages
IMAGE_INSTALL:append = " avahi-daemon avahi-utils network-config"

# Python function to set up Exein init script, hostname, DHCP, and Avahi
python do_setup_network_and_exein() {
    import os, stat, bb

    rootfs = d.getVar('IMAGE_ROOTFS', True)
    hostname = d.getVar('IMG_HOSTNAME', True) or 'yocto-net'

    bb.note("Configuring rootfs network and Exein setup with hostname: %s" % hostname)

    # --- Ensure directories ---
    etc_dir = os.path.join(rootfs, 'etc')
    initd_dir = os.path.join(etc_dir, 'init.d')
    rcS_dir = os.path.join(etc_dir, 'rcS.d')
    systemd_dir = os.path.join(etc_dir, 'systemd/system/multi-user.target.wants')

    for directory in [initd_dir, rcS_dir]:
        if not os.path.exists(directory):
            os.makedirs(directory)

    # --- exein-setup.sh ---
    exein_setup_path = os.path.join(initd_dir, 'exein-setup.sh')
    exein_setup_content = """#!/bin/sh
### BEGIN INIT INFO
# Provides:          exein-setup
# Required-Start:    $local_fs
# Default-Start:     S
# Short-Description: Setup mounts and symlinks for Exein
### END INIT INFO

case "$1" in
  start)
    sleep 1
    [ ! -d /sys/kernel/security ] && mkdir -p /sys/kernel/security
    mountpoint -q /sys/kernel/security || mount -t securityfs none /sys/kernel/security

    [ ! -d /sys/fs/cgroup ] && mkdir -p /sys/fs/cgroup
    mountpoint -q /sys/fs/cgroup || mount -t cgroup2 none /sys/fs/cgroup

    [ ! -d /sys/kernel/tracing ] && mkdir -p /sys/kernel/tracing
    mountpoint -q /sys/kernel/tracing || mount -t tracefs tracefs /sys/kernel/tracing

    [ ! -d /lib64 ] && mkdir -p /lib64
    for f in /lib/*; do ln -sf "$f" /lib64/; done
    ;;
  stop) ;;
  restart|reload)
    $0 stop
    $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac
exit 0
"""
    with open(exein_setup_path, 'w') as f:
        f.write(exein_setup_content)
    os.chmod(exein_setup_path, stat.S_IRWXU | stat.S_IRGRP | stat.S_IXGRP | stat.S_IROTH | stat.S_IXOTH)

    # Link to rcS.d
    rcS_link = os.path.join(rcS_dir, 'S05exein-setup.sh')
    if not os.path.exists(rcS_link):
        os.symlink(os.path.join('../init.d', 'exein-setup.sh'), rcS_link)

    # --- Hostname ---
    hostname_path = os.path.join(etc_dir, 'hostname')
    hosts_path = os.path.join(etc_dir, 'hosts')
    with open(hostname_path, 'w') as f:
        f.write(hostname + '\n')
    with open(hosts_path, 'a') as f:
        f.write('127.0.1.1 {}\n'.format(hostname))

    # --- DHCP script ---
    dhcp_path = os.path.join(initd_dir, 'dhcp.sh')
    dhcp_content = """#!/bin/sh
### BEGIN INIT INFO
# Provides:          dhcp
# Required-Start:    $network
# Default-Start:     S
### END INIT INFO
echo "Starting DHCP client on eth0..."
/sbin/udhcpc -i eth0 -q -b &
"""
    with open(dhcp_path, 'w') as f:
        f.write(dhcp_content)
    os.chmod(dhcp_path, stat.S_IRWXU | stat.S_IRGRP | stat.S_IXGRP | stat.S_IROTH | stat.S_IXOTH)

    # --- Avahi autostart ---
    if os.path.exists(os.path.join(rootfs, 'etc/systemd/system')):
        if not os.path.exists(systemd_dir):
            os.makedirs(systemd_dir)
        link_target = '/lib/systemd/system/avahi-daemon.service'
        link_path = os.path.join(systemd_dir, 'avahi-daemon.service')
        if not os.path.exists(link_path):
            os.symlink(link_target, link_path)
    else:
        # fallback to SysV init
        rcS_file = os.path.join(etc_dir, 'init.d', 'rcS')
        with open(rcS_file, 'a') as f:
            f.write('/etc/init.d/avahi-daemon start\n')
}

# Add Python function to ROOTFS_POSTPROCESS_COMMAND
ROOTFS_POSTPROCESS_COMMAND:append = " do_setup_network_and_exein; "
